import tkinter as tk
from tkinter import messagebox

class ContactManager:
    def __init__(self, root):
        self.root = root
        self.root.title("Contact Management System")
        self.root.geometry("400x400")

              self.contacts = {}

      
        self.name_var = tk.StringVar()
        self.phone_var = tk.StringVar()
        self.email_var = tk.StringVar()
        self.address_var = tk.StringVar()


        tk.Label(self.root, text="Name:").pack()
        tk.Entry(self.root, textvariable=self.name_var).pack()

        tk.Label(self.root, text="Phone:").pack()
        tk.Entry(self.root, textvariable=self.phone_var).pack()

        tk.Label(self.root, text="Email:").pack()
        tk.Entry(self.root, textvariable=self.email_var).pack()

        tk.Label(self.root, text="Address:").pack()
        tk.Entry(self.root, textvariable=self.address_var).pack()

        tk.Button(self.root, text="Add Contact", command=self.add_contact).pack(pady=5)
        tk.Button(self.root, text="View All Contacts", command=self.view_contacts).pack(pady=5)
        tk.Button(self.root, text="Search Contact", command=self.search_contact).pack(pady=5)
        tk.Button(self.root, text="Update Contact", command=self.update_contact).pack(pady=5)
        tk.Button(self.root, text="Delete Contact", command=self.delete_contact).pack(pady=5)

       
        self.result_box = tk.Listbox(self.root, height=10, width=40)
        self.result_box.pack(pady=10)

    def add_contact(self):
        name = self.name_var.get()
        phone = self.phone_var.get()
        email = self.email_var.get()
        address = self.address_var.get()

        if name and phone:
            self.contacts[phone] = {"name": name, "email": email, "address": address}
            messagebox.showinfo("Success", "Contact added successfully.")
            self.clear_fields()
        else:
            messagebox.showerror("Error", "Name and phone number are required.")

    def view_contacts(self):
        self.result_box.delete(0, tk.END)
        if self.contacts:
            for phone, details in self.contacts.items():
                self.result_box.insert(tk.END, f"{details['name']} - {phone}")
        else:
            self.result_box.insert(tk.END, "No contacts found.")

    def search_contact(self):
        self.result_box.delete(0, tk.END)
        search_name = self.name_var.get()
        search_phone = self.phone_var.get()

        found = False
        for phone, details in self.contacts.items():
            if search_name.lower() == details['name'].lower() or search_phone == phone:
                self.result_box.insert(tk.END, f"Name: {details['name']}, Phone: {phone}, Email: {details['email']}, Address: {details['address']}")
                found = True
                break

        if not found:
            self.result_box.insert(tk.END, "Contact not found.")

    def update_contact(self):
        phone = self.phone_var.get()
        if phone in self.contacts:
            self.contacts[phone] = {"name": self.name_var.get(), "email": self.email_var.get(), "address": self.address_var.get()}
            messagebox.showinfo("Success", "Contact updated successfully.")
            self.clear_fields()
        else:
            messagebox.showerror("Error", "Contact not found to update.")

    def delete_contact(self):
        phone = self.phone_var.get()
        if phone in self.contacts:
            del self.contacts[phone]
            messagebox.showinfo("Success", "Contact deleted successfully.")
            self.clear_fields()
        else:
            messagebox.showerror("Error", "Contact not found to delete.")

    def clear_fields(self):
        self.name_var.set("")
        self.phone_var.set("")
        self.email_var.set("")
        self.address_var.set("")


root = tk.Tk()
app = ContactManager(root)
root.mainloop()
